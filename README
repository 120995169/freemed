FreeMED documentation
from jeff b (jeff@freemedsoftware.org)
(c) 1999-2003 by the FreeMED Project under the GPL

********************************************************************** ERRATA
* index.php has to be added in /etc/httpd/conf/?????.conf under the
  list of valid index files.
* These are to be installed in /usr/share/freemed, and a virtual directory
  alias should be made in the Apache configuration files, as well as
  giving read perms to Apache.
* If something doesn't work after you upgrade to a new tarball, visit
  the database maintenance screen to force the modules to update their
  corresponding database tables.
* Code is annotated with an author if the primary author is other than
  jeff b <jeff@freemedsoftware.org>
* Since FreeMED involves a fairly hefty codebase, php optimizing tricks,
  such as the bware_cache module or the Zend Optimizer should be used to
  minimize load times. APC is also available (apc.communityconnect.com)

**************************************************************** INSTALLATION

1) Make sure that MySQL and all of its libraries are properly installed on
   your system. If you are planning on using a MySQL server located on
   another box, be sure that the client libraries are installed on your
   FreeMED box.

2) Make sure that PHP is installed, with MySQL support. Linux-Mandrake
   requires a seperate module (php-mysql) for MySQL support, as do some
   versions of RedHat. FreeMED currently uses PHP version 4 and above.

3) Install phpwebtools (you can download it from
   http://sourceforge.net/projects/phpwebtools/). This library is required
   for versions of FreeMED starting at 0.2.0. FreeMED will give you a
   warning if your version of phpwebtools is too old. We try not to rely
   on a CVS version of phpwebtools for release versions of FreeMED.

4) Install the FreeMED package:

   # cd /usr/share
   # tar zxvf /location/to/tarball/freemed-version.tar.gz

   which will extract the .tar.gz file to /usr/share/freemed/. If you run
   Redhat or Debian, you can use the precompiled packages, which will
   render instructions 6 through 9 unnecessary.

5) Edit the /usr/share/freemed/lib/settings.php file to make sure that all
   settings are correct for your machine. (There is a setup wizard in the
   works that performs this step for you, using a web browser.)

6) Edit your Apache configuration files to associate .php, .inc, and .php3
   files with php, as well as setting index.php3 to be one of the default
   indexes. Also set up access and a directory alias for FreeMED. This is
   accomplished with the following lines:

   DirectoryIndex index.php index.php3 (et cetera...)

   AddType application/x-httpd-php .php .phtml .php3

   Alias /freemed /usr/share/freemed

   <Directory "/usr/share/freemed">
     Options Indexes Includes ExecCGI MultiViews FollowSymLinks
     AllowOverride All
     Order allow,deny
     allow from all
   </Directory>

7) HUP apache (killall -1 httpd) to force it to reload its configuration
   files.

8) Create the database with the command "mysqladmin -p create freemed"
   (if you are using MySQL). (The setup wizard also does this.) Please
   note that if you do not give FreeMED's MySQL user permission to the
   FreeMED database, it will generate an error. Check MySQL's manual for
   the "GRANT" command for more information on this.

9) Adjust the memory limit in your php.ini file to be 64M. It is by
   default set to 8M, which causes errors, since FreeMED requires more
   memory than that for some of its functions.

10) Try to load http://localhost/freemed/ in your web browser. This should
   take you through a wizard which will help you set up FreeMED.
   You may now use FreeMED. Congratulations!


************************************************************* TROUBLESHOOTING

Q: I get an SQL connection error. What's wrong?
A: Try using the commandline clients for your SQL server. (For MySQL, this is
   simply "mysql -u (user) -p") If this works and you still can't log in with
   FreeMED, you may not have created the FreeMED database properly. You can
   log into the administrative console and add the database with the command
   "CREATE DATABASE freemed;". If this still does not allow you to connect,
   check your username, password, host, and table settings in lib/settings.php
   in your FreeMED installation. If you haven't set these properly, FreeMED
   will be unable to communicate with the SQL backend. If this still does
   not work, there is a chance that the machine or account that FreeMED is
   using does not have proper access rights on the SQL server. Please consult
   your SQL server documentation if this is the case.

Q: Why isn't FreeMED letting me log in! I entered everything in correctly,
   but it still gives me an error, with a menubar to the left.
A: Your version of PHP is probably broken in regard to sessions support. This
   problem has been noted on PHP 4.1.2, but your version may also have this
   problem. Use the newest version of PHP available to you. (For one reason
   or another, global variable registration changed from on to off by
   default in newer versions of PHP, supposedly for security reasons. This
   assumption has been known to break PHP code, so you can go into your
   php.ini file and enable register_globals if you still have problems.)

