<?
/***********************************************************/
/* TextAreaClass, a wrapper for GtkScintilla used in Merge Tool
/* by Pablo Dall'Oglio 2001-2006
/***********************************************************/
class TextArea extends GtkTextView  //GtkText
{
    /***********************************************************/
    /* Constructor Method
    /***********************************************************/

	function  __construct()
    	{
	// GtkText::GtkText();
	   parent::__construct();
	   $this->buffer1 = new GtkTextBuffer();
	   $this->set_buffer($this->buffer1);

	   $this->set_editable(true);
	   $this->show();
	}

    /***********************************************************/
    /* Open a File
    /***********************************************************/
	function Open($lines)
	{
	$this->clear_all();
        foreach($lines as $line)
        {
            $this->insert_text(-1, $line . "\n");
        }
	}
    
    function add_text($text)
    {
//        GtkText::insert(null, null, null, $text);

		$this->buffer1->insert_interactive_at_cursor($text,strlen($text),true);
		$this->set_buffer($this->buffer1);
  	   


    }
    
    function get_text()
    {
//        return GtkText::get_chars(0,-1);
	 $buffer = $this->get_buffer();
	 return $buffer->get_text($buffer->get_start_iter(), $buffer->get_end_iter());
	   

    }
    
    function clear_all()
    {
//        GtkText::delete_text(0,-1);
	

  		  $buffer1 = new GtkTextBuffer();
		  $text='';
		  $buffer1->set_text($text);
		  $this->set_buffer($buffer1);
	
    }
        function insert($text)
    {
     //   GtkText::insert_text($text, GtkText::get_position());

		$this->buffer1->insert_interactive_at_cursor($text,strlen($text),true);
		$this->set_buffer($this->buffer1);
     }
    function insertText($text)
    {
     //   GtkText::insert_text($text, GtkText::get_position());

		$this->buffer1->insert_interactive_at_cursor($text,strlen($text),true);
		$this->set_buffer($this->buffer1);
     }
}
?>
