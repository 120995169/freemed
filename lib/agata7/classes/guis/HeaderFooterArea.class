<?
/***********************************************************/
/* Header and Footer controls class
/* by Pablo Dall'Oglio 2001-2006
/***********************************************************/
class HeaderFooterArea
{
    /***********************************************************/
    /* Constructor Method
    /***********************************************************/
    function HeaderFooterArea($glade)
    { try{

        global $Pixmaps;
        $this->Header = $glade->get_widget('textPageHeader');
   	$this->buffer1 = new GtkTextBuffer();
	$this->Header->set_buffer($this->buffer1);

        $this->Footer = $glade->get_widget('textPageFooter');
	$this->buffer2 = new GtkTextBuffer();
	$this->Footer->set_buffer($this->buffer2);

        $this->HeaderFooterNotebook     = $glade->get_widget('notebookHeaderFooter');
        $this->Buttons['DateTime2']     = $glade->get_widget('buttonDateTime2');
        $this->Buttons['Chars2']        = $glade->get_widget('buttonChars2');
        $this->Buttons['InsertImage2']  = $glade->get_widget('buttonInsertImage2');

        $this->radios['rbHeaderLeft']   = $glade->get_widget('rbHeaderLeft');
        $this->radios['rbHeaderCenter'] = $glade->get_widget('rbHeaderCenter');
        $this->radios['rbHeaderRight']  = $glade->get_widget('rbHeaderRight');
        $this->radios['rbFooterLeft']   = $glade->get_widget('rbFooterLeft');
        $this->radios['rbFooterCenter'] = $glade->get_widget('rbFooterCenter');
        $this->radios['rbFooterRight']  = $glade->get_widget('rbFooterRight');

        $labelHeaderLeft   = $this->radios['rbHeaderLeft']->child;
        $labelHeaderCenter = $this->radios['rbHeaderCenter']->child;
        $labelHeaderRight  = $this->radios['rbHeaderRight']->child;
        $labelFooterLeft   = $this->radios['rbFooterLeft']->child;
        $labelFooterCenter = $this->radios['rbFooterCenter']->child;
        $labelFooterRight  = $this->radios['rbFooterRight']->child;
    
        $labelHeaderLeft->set_text(_a('Left'));
        $labelFooterLeft->set_text(_a('Left'));
        $labelHeaderCenter->set_text(_a('Center'));
        $labelFooterCenter->set_text(_a('Center'));
        $labelHeaderRight->set_text(_a('Right'));
        $labelFooterRight->set_text(_a('Right'));

        $img_mimetypes = array('png', 'jpg', 'jpeg');
        $this->param['InsertImage']=array(array(&$this, 'TypeImage'), $img_mimetypes, null,     _a('Open'));
        $this->Buttons['DateTime2']->connect_simple('clicked', array(&$this, 'PopDateTime'));
        $this->Buttons['Chars2']->connect_simple('clicked',array(&$this, 'PopChars'));
        $this->Buttons['InsertImage2']->connect_simple('clicked', 'HandlerFile', $this->param['InsertImage']);

        $this->MenuChars = new GtkMenu;

	$option1 = new GtkMenuItem(  _a('Year'));
        $option1  = new GtkMenuItem( chr(185));
        $option2  =new GtkMenuItem( chr(178));
        $option3  = new GtkMenuItem(  chr(179));
        $option4  = new GtkMenuItem(  chr(186));
        $option5  = new GtkMenuItem(  chr(170));
        $option6  = new GtkMenuItem(  chr(188));
        $option7  = new GtkMenuItem( chr(189));
        $option8  = new GtkMenuItem(  chr(190));
        $option9  = new GtkMenuItem( _a('Registered') . ' ' . chr(174));
        $option10 = new GtkMenuItem( _a('Copyright')  . ' ' . chr(169));
        $option11 = new GtkMenuItem( _a('Sterling')   . ' ' . chr(163));
        $option12 = new GtkMenuItem( _a('Paragraph')  . ' ' . chr(167));
        $option13 = new GtkMenuItem( _a('Spaniard')   . ' ' . chr(191));
        $option14 = new GtkMenuItem( 'PI ' . chr(182));
        $option15 = new GtkMenuItem( chr(177));
        $option16 = new GtkMenuItem( _a('Commented Line'));
        $option17 = new GtkMenuItem( _a('File Name'));
        $option18 = new GtkMenuItem( _a('Page Number'));
        $option19 = new GtkMenuItem( _a('Page counting'));

	$this->MenuChars->append($option1);
        $this->MenuChars->append($option2);
        $this->MenuChars->append($option3);
        $this->MenuChars->append($option4);
        $this->MenuChars->append($option5);
        $this->MenuChars->append($option6);
        $this->MenuChars->append($option7);
        $this->MenuChars->append($option8);
        $this->MenuChars->append($option9);
        $this->MenuChars->append($option10);
        $this->MenuChars->append($option11);
        $this->MenuChars->append($option12);
        $this->MenuChars->append($option13);
        $this->MenuChars->append($option14);
        $this->MenuChars->append($option15);
        $this->MenuChars->append($option16);
        $this->MenuChars->append($option17);
        $this->MenuChars->append($option18);
        $this->MenuChars->append($option19);

        $option1->connect_simple('activate', array(&$this, 'TypeChar'), ' $sup1 ');
        $option2->connect_simple('activate', array(&$this, 'TypeChar'), ' $sup2 ');
        $option3->connect_simple('activate', array(&$this, 'TypeChar'), ' $sup3 ');
        $option4->connect_simple('activate', array(&$this, 'TypeChar'), ' $supo ');
        $option5->connect_simple('activate', array(&$this, 'TypeChar'), ' $supa ');
        $option6->connect_simple('activate', array(&$this, 'TypeChar'), ' $s14 ');
        $option7->connect_simple('activate', array(&$this, 'TypeChar'), ' $s12 ');
        $option8->connect_simple('activate', array(&$this, 'TypeChar'), ' $s34 ');
        $option9->connect_simple('activate', array(&$this, 'TypeChar'), ' $reco ');
        $option10->connect_simple('activate', array(&$this, 'TypeChar'), ' $copy ');
        $option11->connect_simple('activate', array(&$this, 'TypeChar'), ' $ster ');
        $option12->connect_simple('activate', array(&$this, 'TypeChar'), ' $para ');
        $option13->connect_simple('activate', array(&$this, 'TypeChar'), ' $iesp ');
        $option14->connect_simple('activate', array(&$this, 'TypeChar'), ' $pi ');
        $option15->connect_simple('activate', array(&$this, 'TypeChar'), ' $mame ');
        $option16->connect_simple('activate', array(&$this, 'TypeChar'), "\n// ");
        $option17->connect_simple('activate', array(&$this, 'TypeChar'), ' $filename ');
        $option18->connect_simple('activate', array(&$this, 'TypeChar'), ' $page ');
        $option19->connect_simple('activate', array(&$this, 'TypeChar'), ' $pagecounting ');

       $this->MenuDateTime = new GtkMenu;

	$option1 = new GtkMenuItem(  _a('Year'));
        $option2 = new GtkMenuItem( _a('Month'));
        $option3 = new GtkMenuItem( _a('Day'));
        $option4 = new GtkMenuItem( _a('Month Name'));
        $option5 = new GtkMenuItem( _a('Week Day'));
        $option6 = new GtkMenuItem( _a('Time'));
        

	$this->MenuDateTime->append($option1);
        $this->MenuDateTime->append($option2);
        $this->MenuDateTime->append($option3);
        $this->MenuDateTime->append($option4);
        $this->MenuDateTime->append($option5);
        $this->MenuDateTime->append($option6);
       
	


    
        $option1->connect_simple('activate', array(&$this, 'TypeChar'), ' $year ');
        $option2->connect_simple('activate', array(&$this, 'TypeChar'), ' $month ');
        $option3->connect_simple('activate', array(&$this, 'TypeChar'), ' $day ');
        $option4->connect_simple('activate', array(&$this, 'TypeChar'), ' $monthname ');
        $option5->connect_simple('activate', array(&$this, 'TypeChar'), ' $weekday ');
        $option6->connect_simple('activate', array(&$this, 'TypeChar'), ' $time ');
     }
         catch(Exception $e)
     {
		
		echo $e;
     }

    }

    /***********************************************************/
    /* PopUpMenu chars
    /***********************************************************/
    function PopChars()
    {
        $this->MenuChars->popup();
        $this->MenuChars->show_all();
    }

    /***********************************************************/
    /* PopUpMenu datetime
    /***********************************************************/
    function PopDateTime()
    {
        $this->MenuDateTime->popup();
        $this->MenuDateTime->show_all();
    }

    /***********************************************************/
    /* Prints any char
    /***********************************************************/
    function TypeChar($text)
    {
        if ($this->HeaderFooterNotebook->get_current_page() == 0)
        {
            $this->InsertHeader($text, true);
        }
        else
        {
            $this->InsertFooter($text, true);
        }
    }

    /***********************************************************/
    /* Clear Header and Footer
    /***********************************************************/
    function Clear()
    {
       // $this->Header->delete_text(0, -1);
       // $this->Footer->delete_text(0, -1);


	  	   $buffer1 = new GtkTextBuffer();
		   $text='';
		   $buffer1->set_text($text);
		   $this->Header->set_buffer($buffer1);
		   $this->Footer->set_buffer($buffer1);

    }

    /***********************************************************/
    /* Returns the Header text
    /***********************************************************/
    function GetHeader()
    {
       // return $this->Header->get_chars(0, -1);
	 $buffer =  $this->Header->get_buffer();
	return    $buffer->get_text($buffer->get_start_iter(), $buffer->get_end_iter());
	
    }

    /***********************************************************/
    /* Returens the Footer text
    /***********************************************************/
    function GetFooter()
    {
      //  return $this->Footer->get_chars(0, -1);

	 $buffer =  $this->Header->get_buffer();
	return    $buffer->get_text($buffer->get_start_iter(), $buffer->get_end_iter());

    }

    /***********************************************************/
    /* Inserts the Header text
    /***********************************************************/
    function InsertHeader($text, $current = null)
    {
        if ($current)
        {
          //  $this->Header->insert_text($text, $this->Header->get_position());


		
	
		$this->buffer1->insert_interactive_at_cursor($text,strlen($text),true);
		$this->Header->set_buffer($this->buffer1);
   
        }
        else
        {
//            $this->Header->insert(null, null, null, $text);
		  $buffer = new GtkTextBuffer();
		  $buffer->set_text($text);
		  $this->Header->set_buffer($buffer);


        }
    }

    /***********************************************************/
    /* Inserts the Footer text
    /***********************************************************/
    function InsertFooter($text, $current = null)
    {
        if ($current)
        {
            //$this->Footer->insert_text($text, $this->Footer->get_position());

	
		$this->buffer2->insert_interactive_at_cursor($text,strlen($text),true);
		$this->Footer->set_buffer($this->buffer2);
   
   
        }
        else
        {
         //   $this->Footer->insert(null, null, null, $text);

	   $buffer = new GtkTextBuffer();
	   $buffer->set_text($text);
	   $this->Footer->set_buffer($buffer);

        }
    }

    /***********************************************************/
    /* Prints the imge tag
    /***********************************************************/
    function TypeImage($fs)
    {
        $FileName = $fs->get_filename();
        if ($FileName)
        {
            $fs->hide();
            $this->TypeChar("#image $FileName");
        }
    }

    /***********************************************************/
    /* Returns the Header Align
    /***********************************************************/
    function GetHeaderAlign()
    {
        if ($this->radios['rbHeaderLeft']->get_active())
            return 'left';
        
        if ($this->radios['rbHeaderCenter']->get_active())
            return 'center';
        
        return 'right';
    }

    /***********************************************************/
    /* Returns the Footer Align
    /***********************************************************/
    function GetFooterAlign()
    {
        if ($this->radios['rbFooterLeft']->get_active())
            return 'left';

        if ($this->radios['rbFooterCenter']->get_active())
            return 'center';

        return 'right';
    }

    /***********************************************************/
    /* Set the Header Align
    /***********************************************************/    
    function SetHeaderAlign($align)
    {
        if ($align == 'left')
        {
            $this->radios['rbHeaderLeft']->set_active(true);
        }
        else if ($align == 'right')
        {
            $this->radios['rbHeaderRight']->set_active(true);
        }
        else
        {
            $this->radios['rbHeaderCenter']->set_active(true);
        }
    }

    /***********************************************************/
    /* Set the Footer Align
    /***********************************************************/    
    function SetFooterAlign($align)
    {
        if ($align == 'left')
        {
            $this->radios['rbFooterLeft']->set_active(true);
        }
        else if ($align == 'right')
        {
            $this->radios['rbFooterRight']->set_active(true);
        }
        else
        {
            $this->radios['rbFooterCenter']->set_active(true);
        }
    }
}
?>
